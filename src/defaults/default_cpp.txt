#include <iostream>

class Nodo {
public:
    int dato;
    Nodo* siguiente;

    Nodo(int dato) : dato(dato), siguiente(nullptr) {}
};

class ListaEnlazada {
public:
    Nodo* cabeza;

    ListaEnlazada() : cabeza(nullptr) {}

    void insertarAlInicio(int nuevoDato) {
        Nodo* nuevoNodo = new Nodo(nuevoDato);
        nuevoNodo->siguiente = cabeza;
        cabeza = nuevoNodo;
        std::cout << "Insertado al inicio: " << nuevoDato << std::endl;
    }

    void insertarAlFinal(int nuevoDato) {
        Nodo* nuevoNodo = new Nodo(nuevoDato);
        if (cabeza == nullptr) {
            cabeza = nuevoNodo;
        } else {
            Nodo* temp = cabeza;
            while (temp->siguiente != nullptr) {
                temp = temp->siguiente;
            }
            temp->siguiente = nuevoNodo;
        }
        std::cout << "Insertado al final: " << nuevoDato << std::endl;
    }

    void eliminarNodo(int clave) {
        Nodo* temp = cabeza;
        Nodo* previo = nullptr;

        if (temp != nullptr && temp->dato == clave) {
            cabeza = temp->siguiente;
            delete temp;
            return;
        }

        while (temp != nullptr && temp->dato != clave) {
            previo = temp;
            temp = temp->siguiente;
        }

        if (temp == nullptr) return;

        previo->siguiente = temp->siguiente;
        delete temp;
        std::cout << "Eliminado: " << clave << std::endl;
    }

    void mostrarLista() {
        Nodo* temp = cabeza;
        while (temp != nullptr) {
            std::cout << temp->dato << " ";
            temp = temp->siguiente;
        }
        std::cout << std::endl;
    }
};

int main() {
    ListaEnlazada lista;
    lista.insertarAlInicio(1);
    lista.insertarAlFinal(2);
    lista.insertarAlInicio(3);
    lista.insertarAlFinal(4);
    std::cout << "Lista actual:" << std::endl;
    lista.mostrarLista();
    lista.eliminarNodo(3);
    std::cout << "Lista despuÃ©s de eliminar un nodo:" << std::endl;
    lista.mostrarLista();

    return 0;
}
